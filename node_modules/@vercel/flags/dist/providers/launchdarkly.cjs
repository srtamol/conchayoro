"use strict";Object.defineProperty(exports, "__esModule", {value: true});// src/providers/launchdarkly.ts
async function getLaunchDarklyData(options) {
  const hints = [];
  if (!options.apiKey) {
    hints.push({
      key: "launchdarkly/missing-api-key",
      text: "Missing LaunchDarkly API Key"
    });
  }
  if (!options.environment) {
    hints.push({
      key: "launchdarkly/missing-environment",
      text: "Missing LaunchDarkly API Key"
    });
  }
  if (!options.projectKey) {
    hints.push({
      key: "launchdarkly/missing-environment",
      text: "Missing LaunchDarkly Project Key"
    });
  }
  if (hints.length > 0) {
    return { definitions: {}, hints };
  }
  const res = await fetch(
    `https://app.launchdarkly.com/api/v2/flags/${options.projectKey}`,
    {
      method: "GET",
      headers: { Authorization: options.apiKey },
      cache: "no-store"
    }
  );
  if (res.status !== 200) {
    return {
      definitions: {},
      hints: [
        {
          key: "launchdarkly/response-not-ok",
          text: `Failed to fetch LaunchDarkly (Received ${res.status} response)`
        }
      ]
    };
  }
  const data = await res.json();
  return {
    definitions: data.items.reduce((acc, item) => {
      acc[item.key] = {
        // defaultValue: item.variations[item.defaults.offVariation].value,
        origin: `https://app.launchdarkly.com/${options.projectKey}/${options.environment}/features/${item.key}/targeting`,
        description: item.description,
        options: item.variations.map((variation) => ({
          value: variation.value,
          label: variation.name
        }))
      };
      return acc;
    }, {}),
    hints
  };
}


exports.getLaunchDarklyData = getLaunchDarklyData;
//# sourceMappingURL=launchdarkly.cjs.map