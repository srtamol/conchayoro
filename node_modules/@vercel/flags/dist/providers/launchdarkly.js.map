{"version":3,"sources":["../../src/providers/launchdarkly.ts"],"sourcesContent":["import { type FlagDefinitionsType, type JsonValue } from '..';\nimport { ProviderData } from './types';\n\ninterface LaunchDarklyApiData {\n  items: {\n    key: string;\n    variations: { value: JsonValue; name?: string }[];\n    description: string;\n    defaults: {\n      offVariation: number;\n    };\n  }[];\n}\n\nexport async function getLaunchDarklyData(options: {\n  apiKey: string;\n  environment: string;\n  projectKey: string;\n}): Promise<ProviderData> {\n  const hints: Exclude<ProviderData['hints'], undefined> = [];\n\n  if (!options.apiKey) {\n    hints.push({\n      key: 'launchdarkly/missing-api-key',\n      text: 'Missing LaunchDarkly API Key',\n    });\n  }\n\n  if (!options.environment) {\n    hints.push({\n      key: 'launchdarkly/missing-environment',\n      text: 'Missing LaunchDarkly API Key',\n    });\n  }\n\n  if (!options.projectKey) {\n    hints.push({\n      key: 'launchdarkly/missing-environment',\n      text: 'Missing LaunchDarkly Project Key',\n    });\n  }\n\n  if (hints.length > 0) {\n    return { definitions: {}, hints };\n  }\n\n  const res = await fetch(\n    `https://app.launchdarkly.com/api/v2/flags/${options.projectKey}`,\n    {\n      method: 'GET',\n      headers: { Authorization: options.apiKey },\n      cache: 'no-store',\n    },\n  );\n\n  if (res.status !== 200) {\n    return {\n      definitions: {},\n      hints: [\n        {\n          key: 'launchdarkly/response-not-ok',\n          text: `Failed to fetch LaunchDarkly (Received ${res.status} response)`,\n        },\n      ],\n    };\n  }\n\n  const data = (await res.json()) as LaunchDarklyApiData;\n\n  return {\n    definitions: data.items.reduce<FlagDefinitionsType>((acc, item) => {\n      acc[item.key] = {\n        // defaultValue: item.variations[item.defaults.offVariation].value,\n        origin: `https://app.launchdarkly.com/${options.projectKey}/${options.environment}/features/${item.key}/targeting`,\n        description: item.description,\n        options: item.variations.map((variation) => ({\n          value: variation.value,\n          label: variation.name,\n        })),\n      };\n      return acc;\n    }, {}),\n    hints,\n  };\n}\n"],"mappings":";AAcA,eAAsB,oBAAoB,SAIhB;AACxB,QAAM,QAAmD,CAAC;AAE1D,MAAI,CAAC,QAAQ,QAAQ;AACnB,UAAM,KAAK;AAAA,MACT,KAAK;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAEA,MAAI,CAAC,QAAQ,aAAa;AACxB,UAAM,KAAK;AAAA,MACT,KAAK;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAEA,MAAI,CAAC,QAAQ,YAAY;AACvB,UAAM,KAAK;AAAA,MACT,KAAK;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAEA,MAAI,MAAM,SAAS,GAAG;AACpB,WAAO,EAAE,aAAa,CAAC,GAAG,MAAM;AAAA,EAClC;AAEA,QAAM,MAAM,MAAM;AAAA,IAChB,6CAA6C,QAAQ,UAAU;AAAA,IAC/D;AAAA,MACE,QAAQ;AAAA,MACR,SAAS,EAAE,eAAe,QAAQ,OAAO;AAAA,MACzC,OAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,IAAI,WAAW,KAAK;AACtB,WAAO;AAAA,MACL,aAAa,CAAC;AAAA,MACd,OAAO;AAAA,QACL;AAAA,UACE,KAAK;AAAA,UACL,MAAM,0CAA0C,IAAI,MAAM;AAAA,QAC5D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,OAAQ,MAAM,IAAI,KAAK;AAE7B,SAAO;AAAA,IACL,aAAa,KAAK,MAAM,OAA4B,CAAC,KAAK,SAAS;AACjE,UAAI,KAAK,GAAG,IAAI;AAAA;AAAA,QAEd,QAAQ,gCAAgC,QAAQ,UAAU,IAAI,QAAQ,WAAW,aAAa,KAAK,GAAG;AAAA,QACtG,aAAa,KAAK;AAAA,QAClB,SAAS,KAAK,WAAW,IAAI,CAAC,eAAe;AAAA,UAC3C,OAAO,UAAU;AAAA,UACjB,OAAO,UAAU;AAAA,QACnB,EAAE;AAAA,MACJ;AACA,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AAAA,IACL;AAAA,EACF;AACF;","names":[]}